#!/bin/sh
#
# xenstore-agent
#
# chkconfig:   2345 75 25
# description: xenstore-agent

### BEGIN INIT INFO
# Provides: xenstore-agent
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Should-Start:
# Should-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: xenstore-agent
# Description: xenstore-agent
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

daemon=/usr/bin/xs-agent
prog=`basename $daemon`
run_once_sh=/usr/src/xenstore-agent-1.0/run-one-time.sh

lockfile=/var/lock/subsys/$prog

load_modules() {
    echo -n $"Loading kernel modules for $prog: "

    for module in xenfs openxt-v4v ; do
        if ! modprobe $module ; then
            failure
            echo
            exit 1
        fi
    done

    success
    echo
}

mount_xenfs() {
    echo -n $"Mounting /proc/xen: "
    mount -t xenfs nodev /proc/xen 2>/dev/null

    success
    echo
}

run_once() {
    if [ -x $run_once_sh ] ; then
        echo -n $"Running one-time script for $prog: "

        if ! $run_once_sh ; then
            failure
            echo
            exit 1
        fi
            
        rm -f $run_once_sh
        echo
        success
    fi
}

start_agent() {
    vm_path=`xenstore-read vm`
    agent_opts="xen_vm_path:$vm_path:"

    # TODO: update xs-agent to run as a daemon
    echo -n $"Starting $prog: "
    if ! daemon $daemon $agent_opts "</dev/null" ">&0" "2>&1" "&" ; then
        failure
        echo
        exit 1
    fi

    success
    echo
}

stop_agent() {
    echo -n $"Stopping $prog: "
    if ! killproc $prog ; then
        failure
        echo
        exit 1
    fi

    success
    echo
}

start() {
    load_modules
    mount_xenfs
    run_once
    start_agent

    touch $lockfile
}

stop() {
    stop_agent

    rm -f $lockfile
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

status_q() {
    status $prog >/dev/null 2>&1
}


case "$1" in
    start)
        status_q && exit 0
        $1
        ;;
    stop)
        status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        status $prog
        ;;
    condrestart|try-restart)
        status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit 0
